package com.bea.medrec.controller;


/*
  ** This file was automatically generated by 
  ** EJBGen WebLogic Server 10.0 SP0  Mon Mar 26 02:02:31 BST 2007 914577 
*/


import javax.ejb.EJBObject;
import java.rmi.RemoteException;

// BEGIN imports from bean class
import com.bea.medrec.entities.*;
import com.bea.medrec.exceptions.*;
import com.bea.medrec.utils.*;
import com.bea.medrec.value.*;
import java.rmi.*;
import java.sql.*;
import java.util.*;
import javax.ejb.*;
import javax.naming.*;
import org.apache.log4j.*;
import weblogic.ejb.*;
import weblogic.ejbgen.*;
import weblogic.jdbc.rowset.*;
// END imports from bean class


/**
 * <p>Session facade for all MedRec patient functionality.</p>
 */

public interface PatientSession extends EJBObject {


  /**
   * <p/>Finds MedRec patient by email.</p>
   * @throws NamingException
   * @return Patient  Patient value object.
   * @param pEmail Patient email
   * @weblogic.ejbgen.RemoteMethod UNSPECIFIED
   */
  public com.bea.medrec.value.Patient findPatientByEmail(String pEmail)     throws RemoteException, javax.naming.NamingException, java.lang.Exception;

  /**
   * <p>Find Patient by id.</p>
   * @throws NamingException
   * @return Patient  Patient value object.
   * @param pPatientId Patient Id
   * @weblogic.ejbgen.RemoteMethod UNSPECIFIED
   */
  public com.bea.medrec.value.Patient findPatientById(Integer pPatientId)     throws RemoteException, javax.naming.NamingException, java.lang.Exception;

  /**
   * <p/>
 Find patient by last name.  Wild card search- %lastName%.
 </p>
   * @throws NamingException
   * @return Patient[] Array of Patient value objects.
   * @param pLastName Last name substring
   * @weblogic.ejbgen.RemoteMethod UNSPECIFIED
   */
  public com.bea.medrec.value.Patient[] findPatientByLastNameWild(String pLastName)     throws RemoteException, javax.naming.NamingException, java.lang.Exception;

  /**
   * <p/>
 Finds MedRec patient by social security number.
 </p>
   * @throws NamingException
   * @return Patient  Patient value object.
   * @param pSsn Patient SSN
   * @weblogic.ejbgen.RemoteMethod UNSPECIFIED
   */
  public com.bea.medrec.value.Patient findPatientBySsn(String pSsn)     throws RemoteException, javax.naming.NamingException, java.lang.Exception;

  /**
   * <p>Registers new patient account assigning status to ACTIVE.
 This registration process is used to bypass administration
 workflow which approves/denys new patient accounts.
 <p/>
 Typically this functionality is used by "affiliated" organizations
 who register new patients thru MedRec's web services features.  These
 organizations are trusted; therefore, no adminstration approval is needed.</p>
   * @throws NamingException
   * @return Patient
   * @param pPatient Patient value objects.
   * @weblogic.ejbgen.RemoteMethod UNSPECIFIED
   */
  public com.bea.medrec.value.Patient processActiveRegistration(com.bea.medrec.value.Patient pPatient, String pPassword)     throws RemoteException, javax.naming.NamingException, java.lang.Exception;

  /**
   * <p>Registers new patient account assign status to NEW.
 Typically this functionality is used by online registrants that must
 go through a MedRec adminstration approval process.</p>
   * @param pReg Patient value objects.
   * @weblogic.ejbgen.RemoteMethod UNSPECIFIED
   */
  public void processNewRegistration(com.bea.medrec.value.Registration pReg)     throws RemoteException;

  /**
   * <p>Main patient registration process method.  This method creates a
 login account, assigns patient designated groups, and stores
 pertinent patient data such as name, dob, ssn, etc.
 This method acts as the worker to different types of registration.</p>
   * @throws NamingException
   * @return Patient
   * @param registration Registration value objects.
   * @weblogic.ejbgen.RemoteMethod UNSPECIFIED
   */
  public com.bea.medrec.value.Patient processRegistration(com.bea.medrec.value.Registration registration)     throws RemoteException, java.lang.Exception;

  /**
   * <p/>
 Updates a patient by calling the appropriate entity beans.
 </p>
   * @throws NamingException
   * @return Patient
   * @param pPatient Patient value objects.
   * @weblogic.ejbgen.RemoteMethod UNSPECIFIED
   */
  public com.bea.medrec.value.Patient updatePatient(com.bea.medrec.value.Patient pPatient)     throws RemoteException, javax.naming.NamingException, java.lang.Exception;

}
